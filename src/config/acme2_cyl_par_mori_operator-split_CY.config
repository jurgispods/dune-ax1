## Complete CY-MEMB-ES Mori simulation with full calculation of Mori and non-Mori fluxes. With stimulation.

[general]
outputDir = out-acme2_cyl_par_mori_operator-split_CY
vtkOutput = no
vtkSubSamplingLevel = 0
gnuplotOutput = yes
fullGnuplotOutput = no
hdf5Output = yes
fullHdf5Output = yes
oneTimeGridfunctionOutput = yes
diagnosticsFile = diagnostics.dat
outputTimeInterval = 0.0
# This flag simply loads a state
loadState = no
doExtrapolateXData = no
#loadGridFileName = simulation_states/hackepeter/acme2_cyl_par_test_EQUILIBRIUM.dgf
loadGridFileName = simulation_states/equilibrium/cyl/yasp_square10mm.dgf
# This flag tells to continue the history of the last simulation, i.e. existing 
# data files in the output dir are not cleared, new data is simply appended; 
# if false previous history is 'forgotten'
continueSimulation = no
loadFilename = simulation_states/equilibrium/cyl/yasp_square10mm.dat
#loadFromParallelRun = yes
#parallelRunNumberProcessors = 64
saveState = yes
saveFilename = simulation_states/hackepeter/acme2_cyl_par_mori_operator-split_CY.dat
doCheckpointing = yes
checkpointInterval = 10
createGridFile = yes
saveGridFileName = acme2_cyl_par_mori_operator-split_CY_equilibrium.dgf
loadChannelStates = no

rootOutputNode = 0
outputRootNodeOnly = yes
printMatrix = yes
printRhs = yes
printResidual = no
useRowNormPreconditioner = no

configName = mori
refineXDirection = no
refineYDirection = yes
refineYDirectionGeometrically = no
doAdditionalGlobalRefine = no
# radial cylinder refinement compensates for increasing volumes in y-direction
useRadialCylinderRefinement = no
# Start coordinate of radial refinement
radialCylinderRefinementStart = 15.0e3
# Shall there be an interval of smooth geometric refinement between membrane and
# the beginning of the radial cylinder refinement (radialCylinderRefinementStart)?
transitionIntervalGeometricRefinement = yes
# If not, use nElementsTransitionInterval equidistant elements instead
nElementsTransitionInterval = 20;
# Desired max. ratio between two extracellular cell volumes
max_volume_ratio = 1.e3
# Max. number of points to use in radialCylinderRefinement
max_radial_points = 100
useMembrane = no
numberMembranes = 1
refineMembrane = no
mV_output = yes
gammaPot = 1.0
gammaCon = 1.0
# one of {step, squarePulse, trianglePulse, smoothStep}
#initConc = default
adaptiveTimeStep = no
timeStepFile = simulation_states/load_mori_complete/timesteps.dat
#timeStepEvery = 10
timeStepLowerLimitNewtonIt = 10
timeStepUpperLimitNewtonIt = 30
newtonReduction = 1e-5
newtonAbsLimit = 1e-99
newtonMaxIt = 2
newtonMinLinReduction = 1e-1
maxNumberNewtonRestarts = 0
linearSolverMaxIt = 500
doReorderMatrix = no
# Volume scaling assigns a scaling factor to each DOF, compensating for increasing
# cell volumes algebraically. This is used as a replacement for radial refinement!
doVolumeScaling = yes
#volumeScalingYThreshold = -1
#potentialResidualScalingFactor = 1e6

cellWidth = 500.
y_memb = 500.
d_memb = 5.
xmax = 10.e6
ymax = 500.
ymin = 0.

dx = 10.e6
#dx = 100.e3
# dy only takes effect when logarithmic grid is chosen, otherwise dx is determined by the level
dy = 100
dy_min = 0.5
n_dy_min = 10
dy_cell = 100.
dy_cell_min = 100.
n_dy_cell_min = 0

closedCell = yes

# Initialize channels to the current membrane potential
automaticChannelInitialization = yes
# Value to use if no automatic initialization is desired
channelRestingPotential = -65.

useMoriChargeLayerContribution = yes
disableMoriFluxCalculation = yes
useMoriOperatorSplit = yes
useElectroneutralityTerminationCriterion = no
useMoriCorrection = no
removeDebyeLayerVertices = no
#minimalMembraneDistance = 709
minimalMembraneDistance = 709
fillRemovedRange = no
#arbitraryPotScalingFactor = 5.e4
doConcentrationPostprocessing = no

# This factor scales the membrane flux. Only used for speedup of equilibration phase!
dummy_value = 1

[boundary]
fullyImplicitMembraneFlux = no
writeBoundaryOutput = yes
debyeLayerWidth = 0.
#debyeLayerWidth = 0.

# This flag controls the interpolation of Dirichlet values in each time step
useTimeDependentBoundaryValuesCon = yes
useTimeDependentBoundaryValuesPot = no
couplePotentialNeumannBoundaryToConcentration = yes
loadBoundary = top
membraneOneSided = no
collapseToLineSource = no
originalRadius = 505.
boundaryConLoadFilename = simulation_states/load_mori_complete/total_flux_na.dat simulation_states/load_mori_complete/total_flux_k.dat simulation_states/load_mori_complete/total_flux_cl.dat
#boundaryPotLoadFilename = simulation_states/load_laplace/total_flux_dx10e3.dat

[boundary.concentration]
# Important: Use row-norm preconditioner when using Dirichlet constraints on side boundaries, otherwise the 4x4 block matrices will be (close to) singular in ILU decomposition!
#membrane = Neumann
top = Neumann
bottom = Neumann
leftCytosol = Neumann
rightCytosol = Neumann
leftExtracellular = Neumann
rightExtracellular = Neumann
#leftExtracellular = Dirichlet
#rightExtracellular = Dirichlet

[boundary.potential]
membrane = Neumann
top = Neumann
bottom = Neumann
leftCytosol = Neumann
rightCytosol = Neumann
leftExtracellular = Neumann
rightExtracellular = Neumann

[equilibration]
doEquilibration = no
# This forces the equilibration calculation, even with more than one element in x-direction
forceEquilibration = no
# time parameters; tEquilibration must be a multiple of dtEquilibrium!
tEquilibrium = 1000.0
dtEquilibrium = 10.0

# leak ratios for resting potential generation; sum must be 1!
#Na_leak = 0.09
#K_leak = 0.91
Na_leak = 0.13
K_leak = 0.87

[stimulation]
stimulation = no
cl_flux_stimulation = no
position_x = 150.e3
#position_x = 5.05e6
position_y = 490.
#position_y = 0.
t_inj_start = 20.0
t_inj_end = 2.0e3
# multiply by elementary charge e to get the current in Amps
#I_inj = 1.1e13
I_inj = 0.0
#Cl_flux_inj = 1e12


# Ion concentrations for the solutions
[solution_in]
# "1" : real concentrations
#Na = 12.
#K  = 155.
#Cl = 167.
#Cl = 167.02651
Na =  12.
K =  125.
# use this value to get about -65mV membrane potential, even without Debye layer concentration profile
Cl = 137.0096 
pot = -65.

[solution_ex]
# "1" : real concentrations
Na =  12.
K =  125.
# use this value to get about -65mV membrane potential, even without Debye layer concentration profile
Cl = 137.0096 
pot = -65.

# Channel densities for membrane groups
[membrane]
isActive = yes

[membrane.axon]
# Units for the conductances are [mS/cm^2]
leak   = 0.5
Nav    = 120.
Kv    =  36.

#[membrane.soma]
#Na-Traub     = 100.
#Ca-Traub     = 1.0
#K(DR)-Traub  = 135.
#K(AHP)-Traub = 0.8
#K(C)-Traub   = 20.
#K(A)-Traub   = 0.5
#HH-K = 10.

#[membrane.apical]
#HH-Na = 0.
#HH-K = 0.

