[general]
outputDir = /import/m1/jpods/dune-ax1/2d_square10mm_newbc
vtkOutput = no
fullGnuplotOutput = yes
vtkSubSamplingLevel = 0
diagnosticsFile = diagnostics.dat
outputTimeInterval = 10.0
# This flag simply loads a state
loadState = no
doExtrapolateXData = yes
loadGridFileName = simulation_states/equilibrium/2d/default_ug_square10mm_smooth.dgf
# This flag tells to continue the history of the last simulation, i.e. existing data files in the output dir
# are not cleared, new data is simply appended; is false previous history is 'forgotten'
continueSimulation = no
loadFilename = simulation_states/equilibrium/2d/default_ug_square10mm_smooth.dat
saveState = yes
saveFilename = simulation_states/ap/acme2_square10mm_newbc.dat
doCheckpointing = yes
checkpointInterval = 100.0
createGridFile = yes
saveGridFileName = acme2_fiona_square10mm_newbc.dgf
loadChannelStates = no

printMatrix = no
printRhs = no
useRowNormPreconditioner = no

configName = default
refineXDirection = no
refineYDirectionGeometrically = yes
useMembrane = yes
numberMembranes = 1
refineMembrane = no
mV_output = yes
gammaPot = 1.0
gammaCon = 1.0
# one of {step, squarePulse, trianglePulse, smoothStep}
#initConc = default
adaptiveTimeStep = yes
maxNumberNewtonRestarts = 3

cellWidth = 500.
y_memb = 500.
d_memb = 5.
xmax = 10.0e6
ymax = 10.0e6

dx = 10.0e6
#dx = 100.0e3
# dy only takes effect when geometric grid is chosen, otherwise dy is determined by the level
dy = 100.e3
dy_cell = 100.
dy_min = 0.5

closedCell = yes

automaticChannelInitialization = no
channelRestingPotential = -65.

# This factor scales the membrane flux. Only used for speedup of equilibration phase!
dummy_value = 10

[boundary]
[boundary.concentration]
top = Dirichlet
bottom = Neumann
leftCytosol = Neumann
rightCytosol = Neumann
#leftExtracellular = Neumann
#rightExtracellular = Neumann
# new BC!
leftExtracellular = Dirichlet
rightExtracellular = Dirichlet

[boundary.potential]
top = Dirichlet
bottom = Neumann
leftCytosol = Neumann
rightCytosol = Neumann
leftExtracellular = Neumann
rightExtracellular = Neumann

[equilibration]
doEquilibration = yes
# time parameters; tEquilibration must be a multiple of dtEquilibrium!
tEquilibrium = 10.0
dtEquilibrium = 10.0

# leak ratios for resting potential generation; sum must be 1!
#Na_leak = 0.09
#K_leak = 0.91
Na_leak = 0.13
K_leak = 0.87

[stimulation]
stimulation = no
position_x = 150.0e3
position_y = 0.
t_inj_start = 20.
t_inj_end =  2.0e3
# multiply by elementary charge e to get the current in Amps
#I_inj = 1.0e8
#I_inj = 2.0e9
I_inj = 1.0e10


# Ion concentrations for the solutions
[solution_in]
# "1" : real concentrations
#Na = 12.
#K  = 155.
#Cl = 167.
Na =  12.
K =  125.
Cl = 137.

[solution_ex]
# "1" : real concentrations
#Na = 145.
#K  = 4.
#Cl = 149.
Na = 100.
K =  4.
Cl = 104.

# Channel densities for membrane groups
[membrane]
isActive = yes

[membrane.axon]
leak   = 0.5
Nav    = 120.
Kv    =  36.

#[membrane.soma]
#Na-Traub     = 100.
#Ca-Traub     = 1.0
#K(DR)-Traub  = 135.
#K(AHP)-Traub = 0.8
#K(C)-Traub   = 20.
#K(A)-Traub   = 0.5
#HH-K = 10.

#[membrane.apical]
#HH-Na = 0.
#HH-K = 0.

