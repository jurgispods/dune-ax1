#!/bin/bash

# Get output file pattern by parsing 'pot.dat'
echo 'Parsing pot.dat...'
grep -n "# time" $1/pot.dat | awk '{split($0,a,":"); print a[1] a[3]}' > $1/timesteps.dat
nLines=$(cat $1/timesteps.dat | awk -F, 'NR>=1 && NR<=2 { split($0,a," "); p=last; last=a[1];} END {split($0,a," "); print last-p}')

echo $nLines
nBlanks=$(cat $1/pot.dat | awk -v maxLine="$nLines" 'NR>=1 && NR<=maxLine && !NF {print NR}' | wc -l)
echo $nBlanks
# This is the number of points per timestep in the output file
points=$[$nLines - $nBlanks -1]
pointsY=$[$nBlanks]
pointsX=$[$points/$pointsY]
echo $pointsX $pointsY $points
echo $pointsX $pointsY $points > $1/points.dat

# Get special flux output file pattern by parsing 'flux_na.dat'
echo 'Parsing flux_na.dat...'
grep -n "# time" $1/flux_na.dat | awk '{split($0,a,":"); print a[1] a[3]}' > $1/flux_timesteps.dat
nLines=$(cat $1/flux_timesteps.dat | awk -F, 'NR>=1 && NR<=2 { split($0,a," "); p=last; last=a[1];} END {split($0,a," "); print last-p}')
echo $nLines
nBlanks=$(cat $1/flux_na.dat | awk -v maxLine="$nLines" 'NR>=1 && NR<=maxLine && !NF {print NR}' | wc -l)
echo $nBlanks
# This is the number of points per timestep in the output file
points=$[$nLines - $nBlanks -1]
pointsY=$[$nBlanks]
pointsX=$[$points/$pointsY]
echo $pointsX $pointsY $points
echo $pointsX $pointsY $points > $1/flux_points.dat

#cat $1/timesteps.dat | awk -F, 'NR>=1 && NR<=2 {split($0,a,":"); diff=a[2]-[a1] print $1}'
#awk -F, 'NR>1000 && NR<=2000 && NF==19 {print $1}'
